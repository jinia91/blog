apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: o11y
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"

    spec:
      containers:
        - name: grafana
          image: grafana/grafana:11.3.0
          env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: "Admin"
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              value: "true"
            - name: GF_FEATURE_TOGGLES_ENABLE
              value: "traceqlEditor"
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: config-volume
              mountPath: /etc/grafana/provisioning/datasources/datasources.yml
              subPath: grafana-datasources.yml
      volumes:
        - name: config-volume
          configMap:
            name: grafana-datasources-config
  volumeClaimTemplates:
    - metadata:
        name: grafana-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  type: NodePort
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
      nodePort: 30000
  selector:
    app: grafana